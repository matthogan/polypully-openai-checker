syntax = "proto3";

package software;

option go_package = "api/software;info";

service SoftwareInfoService {
  rpc GetSoftwareInfo (InfoRequest) returns (InfoResponse);
}

message InfoRequest {
  string name = 1;
}

message InfoResponse {
    string name = 1;
    string description = 2;
    string benefits = 3;
    repeated string categories = 4;

    message Alternative {
        string name = 1;
        string description = 2;
        string url = 3;
    }

    repeated Alternative alternatives = 5;

    message Classification {
        string type = 1;
        string subcategory = 2;
    }

    Classification classification = 6;

    message Usage {
        repeated string environment = 1;
        string instructions = 2;
        string age = 3;
        repeated string platforms = 4;
        repeated string languages = 5;
        string license = 6;
        string updates = 7;
        string installation = 8;
        string uninstallation = 9;
        repeated string features = 10;
        repeated string limitations = 11;
    }

    Usage usage = 7;

    message Requirements {
        string minimum = 1;
        string recommended = 2;
    }

    Requirements requirements = 8;

    message Safety {
        message ContextSafety {
            bool safe = 1;
            string description = 2;
        }

        ContextSafety corporate = 1;
        ContextSafety home = 2;
        ContextSafety school = 3;
    }

    Safety safety = 9;

    message Complexity {
        int32 score = 1;
        string description = 2;
    }

    Complexity complexity = 10;

    message Integration {
        string name = 1;
        string description = 2;
    }

    repeated Integration integration = 11;

    string error = 12;
}
